Program state: 
Id: 0
Execution stack: (Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))) Ref(int) v1 
Symbols table: 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))) 
Symbols table: v1-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))) Ref(int) v2 
Symbols table: v1-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))) 
Symbols table: v1-(0,int) v2-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))) Ref(int) v3 
Symbols table: v1-(0,int) v2-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))) 
Symbols table: v1-(0,int) v2-(0,int) v3-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))) int cnt 
Symbols table: v1-(0,int) v2-(0,int) v3-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))) 
Symbols table: cnt-0 v1-(0,int) v2-(0,int) v3-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))) new(v1, 2) 
Symbols table: cnt-0 v1-(0,int) v2-(0,int) v3-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))) 
Symbols table: cnt-0 v1-(1,int) v2-(0,int) v3-(0,int) 
Heap: 1-2 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))) new(v2, 3) 
Symbols table: cnt-0 v1-(1,int) v2-(0,int) v3-(0,int) 
Heap: 1-2 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))) 
Symbols table: cnt-0 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))) new(v3, 4) 
Symbols table: cnt-0 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))) 
Symbols table: cnt-0 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))) newBarrier(cnt, rH(v2)) 
Symbols table: cnt-0 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[] 

Program state: 
Id: 0
Execution stack: (fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))) fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[] 

Program state: 
Id: 0
Execution stack: (fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[] 

Program state: 
Id: 1
Execution stack: (await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[] 

Program state: 
Id: 0
Execution stack: (await(cnt);print(rH(v3))) fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[] 

Program state: 
Id: 1
Execution stack: (wH(v1, rH(v1)*10);print(rH(v1))) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[] 

Program state: 
Id: 0
Execution stack: (await(cnt);print(rH(v3))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[1] 

Program state: 
Id: 1
Execution stack: (wH(v1, rH(v1)*10);print(rH(v1))) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[1] 

Program state: 
Id: 2
Execution stack: (await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[1] 

Program state: 
Id: 0
Execution stack: print(rH(v3)) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[1] 

Program state: 
Id: 1
Execution stack: (wH(v1, rH(v1)*10);print(rH(v1))) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[1] 

Program state: 
Id: 2
Execution stack: (wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[1] 

Program state: 
Id: 0
Execution stack: print(rH(v3)) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 1
Execution stack: (wH(v1, rH(v1)*10);print(rH(v1))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: (wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 0
Execution stack: print(rH(v3)) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 1
Execution stack: print(rH(v1)) wH(v1, rH(v1)*10) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: (wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-2 2-3 3-4 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 0
Execution stack: 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-20 2-3 3-4 
Output: 4 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 1
Execution stack: print(rH(v1)) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-20 2-3 3-4 
Output: 4 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: (wH(v2, rH(v2)*10);print(rH(v2))) wH(v2, rH(v2)*10) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-20 2-3 3-4 
Output: 4 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 1
Execution stack: 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-20 2-30 3-4 
Output: 4 20 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: (wH(v2, rH(v2)*10);print(rH(v2))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-20 2-30 3-4 
Output: 4 20 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: print(rH(v2)) wH(v2, rH(v2)*10) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-20 2-30 3-4 
Output: 4 20 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: print(rH(v2)) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-20 2-300 3-4 
Output: 4 20 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-20 2-300 3-4 
Output: 4 20 300 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 0
Execution stack: (Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))) Ref(int) v1 
Symbols table: 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))) 
Symbols table: v1-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))) Ref(int) v2 
Symbols table: v1-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))) 
Symbols table: v1-(0,int) v2-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))) Ref(int) v3 
Symbols table: v1-(0,int) v2-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))) 
Symbols table: v1-(0,int) v2-(0,int) v3-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))) int cnt 
Symbols table: v1-(0,int) v2-(0,int) v3-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))) 
Symbols table: cnt-0 v1-(0,int) v2-(0,int) v3-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))) new(v1, 2) 
Symbols table: cnt-0 v1-(0,int) v2-(0,int) v3-(0,int) 
Heap: 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))) 
Symbols table: cnt-0 v1-(1,int) v2-(0,int) v3-(0,int) 
Heap: 1-2 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))) new(v2, 3) 
Symbols table: cnt-0 v1-(1,int) v2-(0,int) v3-(0,int) 
Heap: 1-2 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))) 
Symbols table: cnt-0 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: (newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))) new(v3, 4) 
Symbols table: cnt-0 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: new(v3, 4) (fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))) newBarrier(cnt, rH(v2)) 
Symbols table: cnt-0 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 

Program state: 
Id: 0
Execution stack: new(v3, 4) (fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[] 

Program state: 
Id: 0
Execution stack: new(v3, 4) (fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))) fork((await(cnt);(wH(v1, rH(v1)*10);print(rH(v1))))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[] 

Program state: 
Id: 0
Execution stack: new(v3, 4) (fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[] 

Program state: 
Id: 1
Execution stack: (await(cnt);(wH(v1, rH(v1)*10);print(rH(v1)))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[] 

Program state: 
Id: 0
Execution stack: new(v3, 4) (await(cnt);print(rH(v3))) fork((await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[] 

Program state: 
Id: 1
Execution stack: (wH(v1, rH(v1)*10);print(rH(v1))) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[] 

Program state: 
Id: 0
Execution stack: new(v3, 4) (await(cnt);print(rH(v3))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[1] 

Program state: 
Id: 1
Execution stack: (wH(v1, rH(v1)*10);print(rH(v1))) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[1] 

Program state: 
Id: 2
Execution stack: (await(cnt);(wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2))))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[1] 

Program state: 
Id: 0
Execution stack: new(v3, 4) print(rH(v3)) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[1] 

Program state: 
Id: 1
Execution stack: (wH(v1, rH(v1)*10);print(rH(v1))) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[1] 

Program state: 
Id: 2
Execution stack: (wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[1] 

Program state: 
Id: 0
Execution stack: new(v3, 4) print(rH(v3)) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 1
Execution stack: (wH(v1, rH(v1)*10);print(rH(v1))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: (wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))) await(cnt) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 0
Execution stack: new(v3, 4) print(rH(v3)) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 1
Execution stack: print(rH(v1)) wH(v1, rH(v1)*10) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: (wH(v2, rH(v2)*10);(wH(v2, rH(v2)*10);print(rH(v2)))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-2 2-3 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 0
Execution stack: new(v3, 4) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-20 2-3 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 1
Execution stack: print(rH(v1)) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-20 2-3 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: (wH(v2, rH(v2)*10);print(rH(v2))) wH(v2, rH(v2)*10) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-20 2-3 
Output: 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 0
Execution stack: 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(3,int) 
Heap: 1-20 2-30 3-4 
Output: 20 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 1
Execution stack: 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-20 2-30 3-4 
Output: 20 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: (wH(v2, rH(v2)*10);print(rH(v2))) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-20 2-30 3-4 
Output: 20 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: print(rH(v2)) wH(v2, rH(v2)*10) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-20 2-30 
Output: 20 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: print(rH(v2)) 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-20 2-300 
Output: 20 
File table: 
Barrier table: 1-3=[1, 0, 2] 

Program state: 
Id: 2
Execution stack: 
Symbols table: cnt-1 v1-(1,int) v2-(2,int) v3-(0,int) 
Heap: 1-20 2-300 
Output: 20 300 
File table: 
Barrier table: 1-3=[1, 0, 2] 

